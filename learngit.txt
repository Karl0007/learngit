创建仓库
git init

更新
放到暂存区
git add <filename>
提交修改
git commit -m "<update message>"

查看更新信息
git log
git reflog

移动到节点
git reset --hard <commit id>

查看状态
git status

撤销当前工作区修改
git checkout -- <filename>

撤销当前暂存区修改
git reset HEAD <filename>

关联远程仓库
git remote add origin git@github.com:karl0007/<project name>

首次推送
git push -u origin master
再次推送
git push origin master

从远程仓库克隆
git clone git@github.com:karl0007/<project name>

查看分支
git branch
创建分支
git branch <name>
切换分支
git checkout <name>
合并到当前分支
git merge <name>
删除分支
git branch -d <name>

非快速合并
git merge --no-ff -m <update message> <branch name>

查看信息
git log --graph --pretty=oneline --abbrev-commit

暂存
git stash
恢复
git stash pop

远程仓库
git remote


从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


打标签
git tag <tag name>
删除标签
git tag -d <tag name>
推送标签
git push origin <tag name>
git push origin --tag